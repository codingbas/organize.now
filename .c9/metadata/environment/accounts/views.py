{"filter":false,"title":"views.py","tooltip":"/accounts/views.py","ace":{"folds":[],"scrolltop":538,"scrollleft":0,"selection":{"start":{"row":67,"column":61},"end":{"row":67,"column":61},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":15,"state":"start","mode":"ace/mode/python"}},"hash":"b236a7cd5618f2c45e18779aec049203513d63c8","undoManager":{"mark":13,"position":13,"stack":[[{"start":{"row":66,"column":26},"end":{"row":66,"column":27},"action":"remove","lines":["t"],"id":2},{"start":{"row":66,"column":25},"end":{"row":66,"column":26},"action":"remove","lines":["e"]},{"start":{"row":66,"column":24},"end":{"row":66,"column":25},"action":"remove","lines":["g"]}],[{"start":{"row":66,"column":24},"end":{"row":66,"column":25},"action":"insert","lines":["g"],"id":3},{"start":{"row":66,"column":25},"end":{"row":66,"column":26},"action":"insert","lines":["e"]},{"start":{"row":66,"column":26},"end":{"row":66,"column":27},"action":"insert","lines":["t"]}],[{"start":{"row":66,"column":53},"end":{"row":66,"column":54},"action":"insert","lines":["."],"id":4},{"start":{"row":66,"column":54},"end":{"row":66,"column":55},"action":"insert","lines":["f"]},{"start":{"row":66,"column":55},"end":{"row":66,"column":56},"action":"insert","lines":["i"]},{"start":{"row":66,"column":56},"end":{"row":66,"column":57},"action":"insert","lines":["r"]}],[{"start":{"row":66,"column":57},"end":{"row":66,"column":58},"action":"insert","lines":["s"],"id":5},{"start":{"row":66,"column":58},"end":{"row":66,"column":59},"action":"insert","lines":["t"]}],[{"start":{"row":66,"column":59},"end":{"row":66,"column":61},"action":"insert","lines":["()"],"id":6}],[{"start":{"row":66,"column":60},"end":{"row":66,"column":61},"action":"remove","lines":[")"],"id":7}],[{"start":{"row":66,"column":60},"end":{"row":66,"column":61},"action":"insert","lines":[")"],"id":8}],[{"start":{"row":66,"column":26},"end":{"row":66,"column":27},"action":"remove","lines":["t"],"id":9},{"start":{"row":66,"column":25},"end":{"row":66,"column":26},"action":"remove","lines":["e"]},{"start":{"row":66,"column":24},"end":{"row":66,"column":25},"action":"remove","lines":["g"]}],[{"start":{"row":66,"column":24},"end":{"row":66,"column":40},"action":"insert","lines":["filter().first()"],"id":10}],[{"start":{"row":66,"column":39},"end":{"row":66,"column":40},"action":"remove","lines":[")"],"id":11},{"start":{"row":66,"column":38},"end":{"row":66,"column":39},"action":"remove","lines":["("]},{"start":{"row":66,"column":37},"end":{"row":66,"column":38},"action":"remove","lines":["t"]},{"start":{"row":66,"column":36},"end":{"row":66,"column":37},"action":"remove","lines":["s"]},{"start":{"row":66,"column":35},"end":{"row":66,"column":36},"action":"remove","lines":["r"]}],[{"start":{"row":66,"column":34},"end":{"row":66,"column":35},"action":"remove","lines":["i"],"id":12},{"start":{"row":66,"column":33},"end":{"row":66,"column":34},"action":"remove","lines":["f"]},{"start":{"row":66,"column":32},"end":{"row":66,"column":33},"action":"remove","lines":["."]}],[{"start":{"row":66,"column":31},"end":{"row":66,"column":32},"action":"remove","lines":[")"],"id":13},{"start":{"row":66,"column":30},"end":{"row":66,"column":31},"action":"remove","lines":["("]}],[{"start":{"row":0,"column":0},"end":{"row":67,"column":61},"action":"remove","lines":["from django.shortcuts import render, redirect, reverse","from django.contrib import auth, messages","from django.contrib.auth.decorators import login_required","from django.contrib.auth.models import User","from accounts.forms import UserLoginForm, UserRegistrationForm","","","def index(request):","    \"\"\"Return the index.html file\"\"\"","    return render(request,  'index.html')","","","@login_required","def logout(request):","    \"\"\"Log the user out\"\"\"","    auth.logout(request)","    messages.success(request, \"You have successfully been logged out\")","    return redirect(reverse('index'))","","","def login(request):","    \"\"\"Return a login page\"\"\"","    if request.user.is_authenticated:","        return redirect(reverse('index'))","    if request.method == \"POST\":","        login_form = UserLoginForm(request.POST)","","        if login_form.is_valid():","            user = auth.authenticate(username=request.POST['username'],","                                    password=request.POST['password'])","            messages.success(request, \"You have successfully logged in!\")","","            if user:","                auth.login(user=user, request=request)","                return redirect(reverse('index'))","            else:","                login_form.add_error(None, \"Your username or password is incorrect\")","    else:","        login_form = UserLoginForm()","    return render(request, 'login.html', {'login_form': login_form})","    ","def registration(request):","    \"\"\"Render the registration page\"\"\"","    if request.user.is_authenticated:","        return redirect(reverse('index'))","","    if request.method == \"POST\":","        registration_form = UserRegistrationForm(request.POST)","","        if registration_form.is_valid():","            registration_form.save()","","            user = auth.authenticate(username=request.POST['username'],","                                     password=request.POST['password1'])","            if user:","                auth.login(user=user, request=request)","                messages.success(request, \"You have successfully registered\")","            else:","                messages.error(request, \"Unable to register your account at this time\")","    else:","        registration_form = UserRegistrationForm()","    return render(request, 'registration.html', {","        \"registration_form\": registration_form})","","def user_profile(request):","    \"\"\"The user's profile page\"\"\"","    user = User.objects.filter(email=request.user.email).first()","    return render(request, 'profile.html', {\"profile\": user})"],"id":14}],[{"start":{"row":0,"column":0},"end":{"row":67,"column":61},"action":"insert","lines":["from django.shortcuts import render, redirect, reverse","from django.contrib import auth, messages","from django.contrib.auth.decorators import login_required","from django.contrib.auth.models import User","from accounts.forms import UserLoginForm, UserRegistrationForm","","","def index(request):","    \"\"\"Return the index.html file\"\"\"","    return render(request,  'index.html')","","","@login_required","def logout(request):","    \"\"\"Log the user out\"\"\"","    auth.logout(request)","    messages.success(request, \"You have successfully been logged out\")","    return redirect(reverse('index'))","","","def login(request):","    \"\"\"Return a login page\"\"\"","    if request.user.is_authenticated:","        return redirect(reverse('index'))","    if request.method == \"POST\":","        login_form = UserLoginForm(request.POST)","","        if login_form.is_valid():","            user = auth.authenticate(username=request.POST['username'],","                                    password=request.POST['password'])","            messages.success(request, \"You have successfully logged in!\")","","            if user:","                auth.login(user=user, request=request)","                return redirect(reverse('index'))","            else:","                login_form.add_error(None, \"Your username or password is incorrect\")","    else:","        login_form = UserLoginForm()","    return render(request, 'login.html', {'login_form': login_form})","    ","def registration(request):","    \"\"\"Render the registration page\"\"\"","    if request.user.is_authenticated:","        return redirect(reverse('index'))","","    if request.method == \"POST\":","        registration_form = UserRegistrationForm(request.POST)","","        if registration_form.is_valid():","            registration_form.save()","","            user = auth.authenticate(username=request.POST['username'],","                                     password=request.POST['password1'])","            if user:","                auth.login(user=user, request=request)","                messages.success(request, \"You have successfully registered\")","            else:","                messages.error(request, \"Unable to register your account at this time\")","    else:","        registration_form = UserRegistrationForm()","    return render(request, 'registration.html', {","        \"registration_form\": registration_form})","","def user_profile(request):","    \"\"\"The user's profile page\"\"\"","    user = User.objects.get(email=request.user.email)","    return render(request, 'profile.html', {\"profile\": user})"],"id":15}]]},"timestamp":1566492473720}